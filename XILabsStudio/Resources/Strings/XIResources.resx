<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Accent" xml:space="preserve">
    <value>Accent</value>
  </data>
  <data name="AddVoicePopup.InstantVoiceCloningDescription" xml:space="preserve">
    <value>Instant Voice Cloning
Starter+ only.
Clone a voice from a clean sample recording. Samples should contain 1 speaker and be over 1 minute long and not contain background noise.</value>
  </data>
  <data name="AddVoicePopup.ProfessionalVoiceCloningDescription" xml:space="preserve">
    <value>Professional Voice Cloning
Creator+ only.
Create a perfect digital replica of your voice.</value>
  </data>
  <data name="AddVoicePopup.TypeOfVoiceToCreate" xml:space="preserve">
    <value>Type of voice to create</value>
  </data>
  <data name="AddVoicePopup.VoiceDesignDescription" xml:space="preserve">
    <value>Voice Design
Design entirely new voices by adjusting their parameters. Every voice you create is randomly generated and is entirely unique even if the same settings are applied.</value>
  </data>
  <data name="AddVoicePopup.VoiceLibraryDescription" xml:space="preserve">
    <value>Voice LibraryAdd a voice from our community.</value>
  </data>
  <data name="Age" xml:space="preserve">
    <value>Age</value>
  </data>
  <data name="AudioPlayerPopup.DownloadAudio" xml:space="preserve">
    <value>Download Audio</value>
  </data>
  <data name="AudioPlayerPopup.DownloadAudio.ChooseAFolderMessage" xml:space="preserve">
    <value>You need to choose a folder to continue downloading your audio file.</value>
  </data>
  <data name="AudioPlayerPopup.DownloadAudio.ChooseAFolderTitle" xml:space="preserve">
    <value>Choose a folder to download audio:</value>
  </data>
  <data name="AudioPlayerPopup.DownloadAudio.EnterFileName" xml:space="preserve">
    <value>Enter file name</value>
  </data>
  <data name="AudioPlayerPopup.DownloadAudio.FileSaved" xml:space="preserve">
    <value>File saved!</value>
  </data>
  <data name="AudioPlayerPopup.FastForward" xml:space="preserve">
    <value>Fast-forward 10 seconds</value>
  </data>
  <data name="AudioPlayerPopup.MaximizeAudioPlayer" xml:space="preserve">
    <value>Maximize Audio Player</value>
  </data>
  <data name="AudioPlayerPopup.MinimizeAudioPlayer" xml:space="preserve">
    <value>Minimize Audio Player</value>
  </data>
  <data name="AudioPlayerPopup.PlayPause" xml:space="preserve">
    <value>Play/Pause</value>
  </data>
  <data name="AudioPlayerPopup.Rewind" xml:space="preserve">
    <value>Rewind 10 seconds</value>
  </data>
  <data name="AudioPlayerPopup.ShareAudio" xml:space="preserve">
    <value>Share Audio</value>
  </data>
  <data name="AudioPlayerPopup.ThumbsDown" xml:space="preserve">
    <value>Thumbs down</value>
  </data>
  <data name="AudioPlayerPopup.ThumbsUp" xml:space="preserve">
    <value>Thumbs up</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ChooseAModelPopup.ChooseAModel" xml:space="preserve">
    <value>Choose a model to use</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Connect" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="CopiedToYourClipboard" xml:space="preserve">
    <value>Copied to your clipboard</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditVoice" xml:space="preserve">
    <value>Edit Voice</value>
  </data>
  <data name="FirstRunXP.APIKeyEntryPlaceholder" xml:space="preserve">
    <value>XI-API-Key: </value>
  </data>
  <data name="FirstRunXP.ConnectButton" xml:space="preserve">
    <value>Connect</value>
  </data>
  <data name="FirstRunXP.EmptyAPIKeyAlertDescription" xml:space="preserve">
    <value>To continue, you need to provide your ElevenLabs API key.</value>
  </data>
  <data name="FirstRunXP.EmptyAPIKeyAlertTitle" xml:space="preserve">
    <value>An API key is required</value>
  </data>
  <data name="FirstRunXP.RememberMeLabel" xml:space="preserve">
    <value>Remember Me</value>
  </data>
  <data name="FirstRunXP.Title" xml:space="preserve">
    <value>First-run Experience</value>
  </data>
  <data name="FirstRunXP.WelcomeMessage" xml:space="preserve">
    <value>Welcome to XILabs' unofficial studio – your gateway to a groundbreaking multiplatform app for creating and leveraging AI-voiced content. Whether you're a developer, artist, or creator, we're thrilled to have you join our vibrant community.
To get started, you have to enter your ElevenLabs API key.
You can view your xi-api-key using the 'Profile' tab on the website. https://elevenlabs.io.
Remember, this project is open source – we encourage you to participate in its development!
Additionally, if you encounter any issues with the app, feel free to open an issue – your feedback is invaluable to us!</value>
  </data>
  <data name="FirstRunXP.WrongAPIKeyAlertDescription" xml:space="preserve">
    <value>Wrong ElevenLabs API key. Please check your API key at </value>
  </data>
  <data name="FirstRunXP.WrongAPIKeyAlertTitle" xml:space="preserve">
    <value>Wrong API Key</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="HistoryPage.DeleteSelectedItemsAlert.Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="HistoryPage.DeleteSelectedItemsAlertDescription" xml:space="preserve">
    <value>Do you really want to delete selected history items? This actions cannot be undone.</value>
  </data>
  <data name="HistoryPage.DeleteSelectedItemsAlertTitle" xml:space="preserve">
    <value>Delete History Items</value>
  </data>
  <data name="HistoryPage.Description" xml:space="preserve">
    <value>Full list of all your generated samples, ready for download.</value>
  </data>
  <data name="HistoryPage.DownloadSelected" xml:space="preserve">
    <value>Download Selected</value>
  </data>
  <data name="HistoryPage.RemoveSelected" xml:space="preserve">
    <value>Remove Selected</value>
  </data>
  <data name="Labels" xml:space="preserve">
    <value>Labels</value>
  </data>
  <data name="Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="Medium" xml:space="preserve">
    <value>Medium</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="OnAndroid.AskForPermissionMessage" xml:space="preserve">
    <value>You need to allow the following permission(s) to continue.</value>
  </data>
  <data name="OnAndroid.AskForPermissionTitle" xml:space="preserve">
    <value>Allow app permission</value>
  </data>
  <data name="Page" xml:space="preserve">
    <value>Page</value>
  </data>
  <data name="Play" xml:space="preserve">
    <value>Play</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectAll" xml:space="preserve">
    <value>Select All</value>
  </data>
  <data name="SelectAnItem" xml:space="preserve">
    <value>Select an item.</value>
  </data>
  <data name="Selected" xml:space="preserve">
    <value>Selected</value>
  </data>
  <data name="Sharing" xml:space="preserve">
    <value>Sharing</value>
  </data>
  <data name="Shell.DubbingTabTitle" xml:space="preserve">
    <value>Dubbing</value>
  </data>
  <data name="Shell.DubbingTabTooltip" xml:space="preserve">
    <value>Automatically voice your content into other languages</value>
  </data>
  <data name="Shell.HistoryTabTitle" xml:space="preserve">
    <value>History</value>
  </data>
  <data name="Shell.ProjectsTabTitle" xml:space="preserve">
    <value>Projects</value>
  </data>
  <data name="Shell.projectsTabTooltip" xml:space="preserve">
    <value>Our advanced long-form Speech Synthesis editor</value>
  </data>
  <data name="Shell.SpeechSynthesisTabTitle" xml:space="preserve">
    <value>Speech Synthesis</value>
  </data>
  <data name="Shell.SpeechSynthesisTabTooltip" xml:space="preserve">
    <value>Generate impeccable speech</value>
  </data>
  <data name="Shell.VoiceLabTabTitle" xml:space="preserve">
    <value>VoiceLab</value>
  </data>
  <data name="Shell.VoiceLabTabTooltip" xml:space="preserve">
    <value>Explore Voice Design and Instant Voice Cloning</value>
  </data>
  <data name="Shell.VoiceLibraryTabTitle" xml:space="preserve">
    <value>Voice Library</value>
  </data>
  <data name="Shell.VoiceLibraryTabTooltip" xml:space="preserve">
    <value>Explore shared voices from the community</value>
  </data>
  <data name="SignOut" xml:space="preserve">
    <value>Sign Out</value>
  </data>
  <data name="SpeechSynthesisPage.AddVoice" xml:space="preserve">
    <value>Add voice</value>
  </data>
  <data name="SpeechSynthesisPage.Description" xml:space="preserve">
    <value>Unleash the power of our cutting-edge technology to generate realistic, captivating speech in a wide range of languages.</value>
  </data>
  <data name="SpeechSynthesisPage.Generate" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="SpeechSynthesisPage.Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SpeechSynthesisPage.TotalRemainingQuota" xml:space="preserve">
    <value>Total quota remaining</value>
  </data>
  <data name="SpeechSynthesisPage.TTSInput" xml:space="preserve">
    <value>Type or paste text here. The model works best on longer fragments.</value>
  </data>
  <data name="SpeechSynthesisPage.Voice" xml:space="preserve">
    <value>Voice: </value>
  </data>
  <data name="SpeechSynthesisPage.VoiceSettings" xml:space="preserve">
    <value>Voice Settings</value>
  </data>
  <data name="Subscribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="Subscription" xml:space="preserve">
    <value>Subscription</value>
  </data>
  <data name="UsageAnalytics" xml:space="preserve">
    <value>Usage Analytics</value>
  </data>
  <data name="Use" xml:space="preserve">
    <value>Use</value>
  </data>
  <data name="VoiceDesignPopup.AccentStrength" xml:space="preserve">
    <value>Accent Strength</value>
  </data>
  <data name="VoiceDesignPopup.DefaultText" xml:space="preserve">
    <value>First we thought the PC was a calculator. Then we found out how to turn numbers into letters and we thought it was a typewriter.</value>
  </data>
  <data name="VoiceDesignPopup.GenerateVoice" xml:space="preserve">
    <value>Generate Voice</value>
  </data>
  <data name="VoiceDesignPopup.UseVoice" xml:space="preserve">
    <value>Use Voice</value>
    <comment>Use Voice</comment>
  </data>
  <data name="VoiceDetailsPopup.HowWouldYouDescribeTheVoice" xml:space="preserve">
    <value>How would you describe the voice? e.g., "an old American male voice with a slight hoarseness in his throat. Perfect for news."</value>
  </data>
  <data name="VoiceLabPage.AddGenerativeOrClonedVoice" xml:space="preserve">
    <value>Add Generative or Cloned Voice</value>
  </data>
  <data name="VoiceLabPage.Description" xml:space="preserve">
    <value>Your creative AI toolkit. Design entirely new synthetic voices from scratch. Clone your own voice or a voice you have a permission and rights to. Only you have access to the voices you create.</value>
  </data>
  <data name="VoiceSettingsPopup.ClarityPlusSimilarityEnhancement" xml:space="preserve">
    <value>Clarity + Similarity Enhancement</value>
  </data>
  <data name="VoiceSettingsPopup.Exaggerated" xml:space="preserve">
    <value>Exaggerated</value>
  </data>
  <data name="VoiceSettingsPopup.High" xml:space="preserve">
    <value>High</value>
  </data>
  <data name="VoiceSettingsPopup.Low" xml:space="preserve">
    <value>Low</value>
  </data>
  <data name="VoiceSettingsPopup.MoreStable" xml:space="preserve">
    <value>More stable</value>
  </data>
  <data name="VoiceSettingsPopup.MoreVariable" xml:space="preserve">
    <value>More variable</value>
  </data>
  <data name="VoiceSettingsPopup.None" xml:space="preserve">
    <value>None (Fastest)</value>
  </data>
  <data name="VoiceSettingsPopup.SpeakerBoost" xml:space="preserve">
    <value>Speaker Boost</value>
  </data>
  <data name="VoiceSettingsPopup.Stability" xml:space="preserve">
    <value>Stability</value>
  </data>
  <data name="VoiceSettingsPopup.StyleExaggeration" xml:space="preserve">
    <value>Style Exaggeration</value>
  </data>
  <data name="VoiceSettingsPopup.ToDefault" xml:space="preserve">
    <value>To Default</value>
  </data>
</root>